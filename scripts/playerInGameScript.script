local left
local right
local up
local down
local shoot
local shootPosition
local bulletShootCooldown
local bulletShootCooldownLimit
local UP_HASH = hash("up")
local DOWN_HASH = hash("down")
local RIGHT_HASH = hash("right")
local LEFT_HASH = hash("left")
local SHOOT_HASH = hash("shoot")
go.property("speed", vmath.vector3(0, 0, 0))
go.property("health", 100)
local speedMultiplier


local function bool_to_number(value)
	return value and 1 or 0
end


function init(self)
	msg.post("#starterGrowl", "play_sound")
	left = false
	right = false
	up = false
	down = false
	shoot = false
	shootPosition = vmath.vector3(0, 0, 0)
	speedMultiplier = 250
	msg.post(".", "acquire_input_focus")
	bulletShootCooldown = 100
	bulletShootCooldownLimit = 200
	self.mousePlayer = vmath.vector3(0, 0, 0)
	self.lookingDirection = 1
	self.beingAttacked = false
	self.aliveStatus = true
	self.deadOnTheGround = false
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	if self.aliveStatus then
		local nowPosition = go.get_position()
		if nowPosition.y > 1020 then
			up = false
		elseif nowPosition.y < 40 then
			down = false
		end
		if nowPosition.x > 1860 then
			right = false
		elseif nowPosition.x < 60 then
			left = false
		end

		if self.beingAttacked then
			self.health = self.health - (48 * dt)
			--print(self.health)
			self.beingAttacked = false
		end

		if self.health <= 0 and self.aliveStatus then
			print("DEAD PLAYER")
			msg.post("/level", "DEAD_PLAYER")
			self.aliveStatus = false
		end
		
		local mouseDeltaX = self.mousePlayer.x - nowPosition.x
		local mouseDeltaY = self.mousePlayer.y - nowPosition.y

		if math.abs(mouseDeltaX) > math.abs(mouseDeltaY) then
			if mouseDeltaX > 0 then
				if self.lookingDirection ~= 1 then
					sprite.play_flipbook("#sprite", hash("walkRight"), animationDone) --right
					self.lookingDirection = 1
				end			
			else
				if self.lookingDirection ~= 2 then
					sprite.play_flipbook("#sprite", hash("walkLeft"), animationDone) --left
					self.lookingDirection = 2
				end
			end
		else
			if mouseDeltaY > 0 then
				if self.lookingDirection ~= 3 then
					sprite.play_flipbook("#sprite", hash("walkUp"), animationDone) --up
					self.lookingDirection = 3
				end
			else
				if self.lookingDirection ~= 4 then
					sprite.play_flipbook("#sprite", hash("walkDown"), animationDone) --down
					self.lookingDirection = 4
				end
			end
		end

		local newPosition = vmath.vector3()
		newPosition.y = nowPosition.y + (bool_to_number(up)) - (bool_to_number(down))
		newPosition.x = nowPosition.x + (bool_to_number(right)) - (bool_to_number(left))

		local distance = vmath.length(newPosition - nowPosition)

		if distance ~= 0 then
			local direction = vmath.normalize(newPosition - nowPosition)
			go.set_position(nowPosition + (direction * speedMultiplier * dt))
		end	

		bulletShootCooldown = bulletShootCooldown + (1000 * dt)
		
		if (shoot and self.health > 0) and bulletShootCooldown >= bulletShootCooldownLimit then
			bulletShootCooldown = 0
			shootPosition = vmath.vector3(self.mousePlayer.x, self.mousePlayer.y, 0)
			local shootDistance = vmath.length(shootPosition - go.get_position())
			local bulletDirection = vmath.vector3(1, 1, 0)
			if shootDistance ~= 0 then
				bulletDirection = vmath.normalize(shootPosition - go.get_position())
			end
			
			local bulletShot = factory.create("#bulletFactory")
			local url = msg.url(nil, bulletShot, "bulletScript")
			go.set(url, "direction", bulletDirection)
		end
	elseif not self.deadOnTheGround then
		local nowPos = go.get_position()
		nowPos.z = 0.75
		go.set_position(nowPos)
		sprite.play_flipbook("/player#sprite", hash("death"))
		self.deadOnTheGround = true
		msg.post("/level", "gameOver")
	end
end



function on_message(self, message_id, message, sender)
	if (message_id == hash("contact_point_response")) and (message.other_group == hash("enemy")) then
		print("Player Hit!" .. os.time())
		self.beingAttacked = true
	end
end

function on_input(self, action_id, action)
	if action_id == UP_HASH then
		if action.pressed then
			up = true
		elseif action.released then
			up = false
		end

	elseif action_id == DOWN_HASH then
		if action.pressed then
			down = true
		elseif action.released then
			down = false
		end

	elseif action_id == LEFT_HASH then
		if action.pressed then
			left = true
		elseif action.released then
			left = false
		end

	elseif action_id == RIGHT_HASH then
		if action.pressed then
			right = true
		elseif action.released then
			right = false
		end
		
	elseif action_id == SHOOT_HASH then
		if action.pressed then
			shoot = true
			shootPosition = vmath.vector3(action.x, action.y, 0)
		elseif action.released then
			shoot = false
		end

	elseif not action_id then
		self.mousePlayer = action
		
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
